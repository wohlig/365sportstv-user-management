name: user-management

on:
    # Trigger the workflow on push,
    # but only for the pre-production branch
    push:
        branches:
            - master

env:
    AWS_REPOSITORY_URL: ${{ secrets.AWS_REPOSITORY_URL }}
    GITHUB_TOKEN: ${{ secrets.AWS_GITHUB_TOKEN }}

jobs:
    user-management:
        runs-on: ubuntu-latest

        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-central-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - uses:
                  actions/checkout@v2
                  # In this step, this action saves a list of existing images,
                  # the cache is created without them in the post run.
                  # It also restores the cache if it exists.
            - uses:
                  satackey/action-docker-layer-caching@v0.0.11
                  # Ignore the failure of a step and avoid terminating the job.
              continue-on-error: true

            - uses: actions/checkout@v2
            - name: Set env
              run: echo "GITHUB_BRANCH=$(echo $GITHUB_REF_NAME-$GITHUB_SHA)" >> $GITHUB_ENV

            - uses: actions/checkout@v2
            - name: Build the Docker image
              run: |

                  docker build -t 032313255471.dkr.ecr.eu-central-1.amazonaws.com/user-mangement:$GITHUB_REF_NAME-$GITHUB_SHA . 
                  docker push 032313255471.dkr.ecr.eu-central-1.amazonaws.com/user-mangement:$GITHUB_REF_NAME-$GITHUB_SHA

                  git clone https://${{ secrets.AWS_GITHUB_USER }}:${{ secrets.AWS_GITHUB_TOKEN }}@github.com/wohlig/Sportstv365-GitOps

                  cd Sportstv365-GitOps

                  git checkout dev

                  git config user.name "$GITHUB_ACTOR"
                  git config user.email "$GITHUB_ACTOR@wohlig.com"

                  yq e '.spec.template.spec.containers[0].image = "032313255471.dkr.ecr.eu-central-1.amazonaws.com/user-mangement:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/user-management.yaml

                  git add .

                  git commit -m "updating newer image"
                  git push --set-upstream origin dev
